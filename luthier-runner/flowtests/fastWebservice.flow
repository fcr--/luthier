require(args.length == 2, "Expected two args, port and path")

import endpoint.cxf.codefirst._
import javax.jws._
@WebService
trait WSEndpoint {
    def sum(a: Double, b: Double): Double
    def echo(s: String): Unit
    def testCmd(cmd: String): String
}

val sei = Sei[WSEndpoint](s"http://localhost:${args(0)}/${args(1)}")
new Flow("sum")(Ws(sei)(_.sum _)) {
  logic {m =>
    m.map(t => t._1 + t._2)
  }
}
new Flow("echo")(Ws(sei)(_.echo _)) {
  logic {m =>
    println("Echoing: " + m.payload)
    m.map(_ => ())
  }
}

//Flow that executes a process and return its result
import scala.sys.process._
new Flow("testCmd")(Ws(sei)(_.testCmd _)) {
  logic {m =>
   //futureMessage2FutureOneOf(endpoint.Process.string(m.payload).pull map {res => res.header ++= m.header; res })
   //endpoint.Process.string(m.payload).pull map {res => res.header ++= m.header; res }
   endpoint.Process.string(m.payload).pull.map{res => res }(implicitly)
  }
}
