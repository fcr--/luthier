import uy.com.netlabs.esb.endpoint._, jms._
import java.nio.file._
import collection.JavaConversions._

val jmsConnection = {
 val res = new org.apache.activemq.ActiveMQConnectionFactory("tcp://localhost:61616")
 res.setDispatchAsync(true)
 res.setUseRetroactiveConsumer(true)
 res.setRedeliveryPolicy({
   val res = new org.apache.activemq.RedeliveryPolicy
   res setMaximumRedeliveries 1
   res
 })
 res.createQueueConnection
}

val dirToWatch = Paths.get(args(0))

new Flow("DirShare")(Jms.queue("dirshare", jmsConnection))(ExchangePattern.RequestResponse) {
  logic {m =>
    lazy val s = Files.newDirectoryStream(dirToWatch)
    val someFile = try {s.toList.headOption} finally {if (s != null) s.close()}
    if(someFile.isDefined) {
      log.info("Sending file " + someFile)
      val bytes = Files.readAllBytes(someFile.get)
      Files.delete(someFile.get)
      m.map(_ => someFile.get.getFileName.toString -> bytes)
    } else m.map(_ => "I got nothing")
  }
}
